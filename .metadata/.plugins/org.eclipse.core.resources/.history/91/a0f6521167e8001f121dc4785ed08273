package com.example.box_manager.viewModel;

import com.example.box_manager.model.Company; 
import com.example.box_manager.repository.CompanyRepository;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseAuthException;
import com.google.firebase.auth.FirebaseToken;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;
import jakarta.servlet.http.HttpServletRequest;

import java.util.concurrent.ExecutionException;

@Component
public class LoginViewModel {

    @Autowired
    private CompanyRepository companyRepository;
    
    public Company authenticate(String token) throws InterruptedException, ExecutionException {
        FirebaseToken decodedToken;
        Company company = null;
		try {
			decodedToken = FirebaseAuth.getInstance().verifyIdToken(token);
	        String id = decodedToken.getUid();
	        // Recupera i dati aziendali dal repository (questo metodo dovrebbe gi√† mappare correttamente i dati)
	        company = companyRepository.getCompanyDataByUserUid(id).get();
	        if (company != null) {
	            company.setUid(id);
	        }
		} catch (FirebaseAuthException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

        return company;
    }

    public void saveUserInSession(Company company) {
        ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();
        if (attributes != null) {
            HttpServletRequest request = attributes.getRequest();
            request.getSession().setAttribute("user", company);
        }
    }
    
    public void logout(HttpServletRequest request) {
        request.getSession().removeAttribute("user");
    }
}

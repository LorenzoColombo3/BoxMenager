package com.example.box_manager.controller;


import java.util.concurrent.ExecutionException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import com.example.box_manager.model.Company;
import com.example.box_manager.viewModel.CustomerDetailViewModel;
import com.example.box_manager.viewModel.CustomersViewModel;
import jakarta.servlet.http.HttpServletRequest;

@Controller
public class CustomersController {

    private final CustomersViewModel customersViewModel;
    private final CustomerDetailViewModel customerDetailViewModel;

    @Autowired
    public CustomersController(CustomersViewModel customersViewModel, CustomerDetailViewModel customerDetailViewModel) {
        this.customersViewModel = customersViewModel;
        this.customerDetailViewModel = customerDetailViewModel;
    }

    @GetMapping("/customers")
    public String getCustomersPage(HttpServletRequest httpRequest, Model model) throws InterruptedException, ExecutionException {
        return customersViewModel.getCustomersPage(httpRequest, model);
    }

    @PostMapping("/customers/add")
    public String addCustomer(@RequestParam String nome, 
                              @RequestParam String cognome, 
                              @RequestParam String citta, 
                              @RequestParam String email,
                              HttpServletRequest httpRequest) {
        return customersViewModel.addCustomer(nome, cognome, citta, email, httpRequest);
    }
    
    @GetMapping("/customer/detail")
    public String getCustomerDetail(@RequestParam String customerId, Model model,HttpServletRequest httpRequest) {
        Company user = (Company) httpRequest.getSession().getAttribute("user");

        if (user == null || user.getUid() == null) {
            return "redirect:/login"; // Reindirizza al login se l'utente non Ã¨ autenticato
        }
        
        // Recupera i dettagli del cliente dal repository tramite il customerId
		model = customerDetailViewModel.getCustomerDetail(user.getUid(), customerId,httpRequest,model);
        return "customerdetailpage";
    }
    
    @PostMapping("/customer/{customerId}/delete")
    public String deleteCustomer(@PathVariable("customerId") String customerId,HttpServletRequest httpRequest) {
        Company user = (Company) httpRequest.getSession().getAttribute("user");
        user.removeCliente(customerId);
        String page = customerDetailViewModel.deleteById(user.getUid(),customerId); 
        return page;
    }
    

    @PostMapping("/assigUnit")
    public String addBox(@RequestParam("numero") String numero,
                          @RequestParam("dataInizio") String dataInizio,
                          @RequestParam("dataFine") String dataFine,
                          @RequestParam("codice") String codice,
                          @RequestParam("customerId") int customerId,
                          HttpServletRequest httpRequest) {
    	
    	Company user = (Company) httpRequest.getSession().getAttribute("user");
    	dataInizio = dataInizio.replace("-", "");
        dataFine = dataFine.replace("-", "");
        // Qui puoi elaborare i dati ricevuti dal form
        System.out.println("Numero: " + numero);
        System.out.println("Data Inizio: " + dataInizio);
        System.out.println("Data Fine: " + dataFine);
        System.out.println("Codice: " + codice);
        System.out.println("Customer ID: " + customerId);
        
        customerDetailViewModel.assignUnit(user.getUid(), String.valueOf(customerId), numero, Integer.parseInt(dataInizio), Integer.parseInt(dataFine), Integer.parseInt(codice));
        
        return "redirect:/customers"; // O la pagina che desideri visualizzare
    }
}
